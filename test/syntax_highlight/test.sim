# MIMO.sim
# Basic mmWave MIMO model
# Author: Wuqiong Zhao
# Date: 2022-07-10

version: 0.1.0 # the targeted mmCEsim version
meta: # document meta data
  title: mmWave MIMO model
  description:
    This is a test document with extension '.sim'
    for a mmWave MIMO model simulation configuration.
  author: Wuqiong Zhao
  email: contact@mmcesim.org
  website: https://mmcesim.org
  license: MIT
  date: "2022-07-10"
  comments: This is an uplink channel.
physics:
  frequency: narrow # assume narrow band
  off_grid: false # do not consider off-grid problem
nodes:
  - id: BS # this should be unique
    role: receiver
    num: 1 # this is the default value
    size: [8, 4] # UPA with size 8x4
    beam: [4, 2]
    grid: same # the same as physics size
    beamforming:
      variable: "W"
      scheme: random
  - id: UE # user
    role: transmitter
    num: 1 # a single-user model
    size: [8] # ULA with size 8
    beam: [2]
    grid: 16
    beamforming:
      variable: "F"
      scheme: random
channels:
  - id: H
    from: BS
    to: UE # 'from -> to' specifies the channel direction
    sparsity: 5
    gains:
      mode: normal
      mean: 0
      variance: 1
sounding:
  variables:
    received: "y" # received signal vector
    noise: "noise" # received noise vector
    channel: "H_cascaded" # the cascaded channel (actually the same as 'H' for simple MIMO)
estimation: | # Alg test here
  D = DICTIONARY 16 8 16 16 # Antenna size: 16x6, Grid size: 16x16
  COMMENT Hello, this is a comment!
  a = INIT 4 3 fill=ones scale=4 dtype=c # a matrix
  b::r = INIT $\pow(5*2, 2)$ scale="-1+1i" # row vector (viewed as a matrix)
  pi::f0c = INIT 3.1415926 # a const float
  random_number = INIT fill=randn scale=-2
  a = CALC b + 2 # explicit CALC function
  a = \sin(b) @ c # implicit CALC function
  a = b^H + c^{-1} # conjugate transpose and inverse
  c = b_{2, 3} # get element of a matrix
  c = \abs{b_{:, 3}} + \pow(b_{}, 2) # use : in subscript & use {} for function
  \exp2(a + c .* d) ./ e^T -f_{:,3,1:index} # element-wise operator and subscript : range
  FOR "i::u0 = INIT 0" "i != 10" "i=i+2" # a for loop taking three parameters
    COMMENT "Do something here in the for loop."
  END
  WHILE i != 100 && result == false # no quote is needed because there will be only one param
    COMMENT "Do something in the while loop."
  END
  FOREVER # takes no param
    BREAK # Wow, nothing is done when I just break here [Lol]
  END
  LOOP 0 10 # implicit counter name as 'i'
    COMMENT 0, 1, 2, ..., 9
    j = LOOP from=10 to=0 step=-1
      COMMENT 10, 9, 8, ..., 0
    END
    k::u0 = LOOP begin=0 end=10 step=2 # specify counter type
      COMMENT 0, 2, 4, 6, 8
    END
  END
  CPP std::cout << "Stantard C++ Language!" << std::endl;
  IF \accu(\pow(\abs(A), 2)) > 0.1 * threshold
    IF b < 0
      b = 0
    ELIF b > 100
      b = 100
    ELSE
      b = -b
    END
  ELSE
    IF cond="c == d" # use key value style if you insist
      A = A * 0.1
    END
  END
simulation:
  backend: cpp # cpp (default) | matlab | octave | py
  metric: [NMSE] # used for compare
  jobs:
    - name: NMSE v.s. SNR
      test_num: 500
      SNR: [0:2:20]
      SNR_mode: dB # dB (default) | linear
      pilot: 0.25
      pilot_mode: percent # num (default) | percent
      algorithms: # compare different languages
        - alg: OMP
          max_iter: auto
          label: OMP # used in report
          estimated_channel: H_hat_OMP # variable name for the estimated channel
        - alg: SBL
          max_iter: 100
          stop_thr: 0.001
          know_variance: true
          label: SBL-EM
    - name: NMSE v.s. pilot
      test_num: 200
      SNR: 0
      pilot: [100:50:400]
      algorithms: # compare different languages
        - alg: OMP
          max_iter: auto
          label: OMP # used in report
        - alg: SBL
          max_iter: 100
          stop_thr: 0.001
          know_variance: true
          label: SBL-EM
  report:
    format: [pdf, latex] # both compiled PDF and tex files
    plot: true # plot data
    table: false # do not print table
    latex:
      command: xelatex # command to compile the report
      UTF8: false # no need for UTF8 support with this setting
